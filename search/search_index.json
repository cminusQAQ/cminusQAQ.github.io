{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. images and other files.","title":"Project layout"},{"location":"1/","text":"this is a demo 1 1","title":"1"},{"location":"1/#this-is-a-demo","text":"","title":"this is a demo"},{"location":"1/#1","text":"","title":"1"},{"location":"1/#1_1","text":"","title":"1"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","text":"\u6811\u72b6\u6570\u7ec4 \u6a21\u677f int lowbit(int x) { // \u7b97\u51fax\u4e8c\u8fdb\u5236\u7684\u4ece\u53f3\u5f80\u5de6\u51fa\u73b0\u7b2c\u4e00\u4e2a1\u4ee5\u53ca\u8fd9\u4e2a1\u4e4b\u540e\u7684\u90a3\u4e9b0\u7ec4\u6210\u6570\u7684\u4e8c\u8fdb\u5236\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u7684\u6570 return x & -x; } void add(int x, int k) { while (x <= n) { // \u4e0d\u80fd\u8d8a\u754c c[x] = c[x] + k; x = x + lowbit(x); } } int getsum(int x) { // a[1]\u2026\u2026a[x]\u7684\u548c int ans = 0; while (x) { ans = ans + c[x]; x = x - lowbit(x); } return ans; } \u65f6\u95f4\u6233\u4f18\u5316 \u5bf9\u4ed8\u591a\u7ec4\u6570\u636e\u5f88\u5e38\u89c1\u7684\u6280\u5de7\u3002\u5982\u679c\u6bcf\u6b21\u8f93\u5165\u65b0\u6570\u636e\u65f6\uff0c\u90fd\u66b4\u529b\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u5c31\u53ef\u80fd\u4f1a\u9020\u6210\u8d85\u65f6\u3002\u56e0\u6b64 \u4f7f\u7528 tag \u6807\u8bb0\uff0c\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u4e0a\u6b21\u4f7f\u7528\u65f6\u95f4\uff08\u5373\u6700\u8fd1\u4e00\u6b21\u662f\u88ab\u7b2c\u51e0\u7ec4\u6570\u636e\u4f7f\u7528\uff09\u3002\u6bcf\u6b21\u64cd\u4f5c\u65f6\u5224\u65ad\u8fd9\u4e2a \u4f4d\u7f6e tag \u4e2d\u7684\u65f6\u95f4\u548c\u5f53\u524d\u65f6\u95f4\u662f\u5426\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u4f4d\u7f6e\u5e94\u8be5\u662f 0 \u8fd8\u662f\u6570\u7ec4\u5185\u7684\u503c\u3002 //\u65f6\u95f4\u6233\u4f18\u5316 int tag[MAXN], t[MAXN], Tag; void reset() { ++Tag; } void add(int k, int v) { while (k <= n) { if (tag[k] != Tag) t[k] = 0; t[k] += v, tag[k] = Tag; k += lowbit(k); } } int getsum(int k) { int ret = 0; while (k) { if (tag[k] == Tag) ret += t[k]; k -= lowbit(k); } return ret; } Tricks $O(n)$\u5efa\u6811 \u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u662f\u7531\u6240\u6709\u4e0e\u81ea\u5df1\u76f4\u63a5\u76f8\u8fde\u7684\u513f\u5b50\u7684\u503c\u6c42\u548c\u5f97\u5230\u7684\u3002\u56e0\u6b64\u53ef\u4ee5\u5012\u7740\u8003\u8651\u8d21\u732e\uff0c\u5373\u6bcf\u6b21\u786e\u5b9a \u5b8c\u513f\u5b50\u7684\u503c\u540e\uff0c\u7528\u81ea\u5df1\u7684\u503c\u66f4\u65b0\u81ea\u5df1\u7684\u76f4\u63a5\u7236\u4eb2\u3002 // O(n)\u5efa\u6811 void init() { for (int i = 1; i <= n; ++i) { t[i] += a[i]; int j = i + lowbit(i); if (j <= n) t[j] += t[i]; } }","title":"\u6811\u72b6\u6570\u7ec4"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_1","text":"","title":"\u6811\u72b6\u6570\u7ec4"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_2","text":"int lowbit(int x) { // \u7b97\u51fax\u4e8c\u8fdb\u5236\u7684\u4ece\u53f3\u5f80\u5de6\u51fa\u73b0\u7b2c\u4e00\u4e2a1\u4ee5\u53ca\u8fd9\u4e2a1\u4e4b\u540e\u7684\u90a3\u4e9b0\u7ec4\u6210\u6570\u7684\u4e8c\u8fdb\u5236\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u7684\u6570 return x & -x; } void add(int x, int k) { while (x <= n) { // \u4e0d\u80fd\u8d8a\u754c c[x] = c[x] + k; x = x + lowbit(x); } } int getsum(int x) { // a[1]\u2026\u2026a[x]\u7684\u548c int ans = 0; while (x) { ans = ans + c[x]; x = x - lowbit(x); } return ans; }","title":"\u6a21\u677f"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_3","text":"\u5bf9\u4ed8\u591a\u7ec4\u6570\u636e\u5f88\u5e38\u89c1\u7684\u6280\u5de7\u3002\u5982\u679c\u6bcf\u6b21\u8f93\u5165\u65b0\u6570\u636e\u65f6\uff0c\u90fd\u66b4\u529b\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u5c31\u53ef\u80fd\u4f1a\u9020\u6210\u8d85\u65f6\u3002\u56e0\u6b64 \u4f7f\u7528 tag \u6807\u8bb0\uff0c\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u4e0a\u6b21\u4f7f\u7528\u65f6\u95f4\uff08\u5373\u6700\u8fd1\u4e00\u6b21\u662f\u88ab\u7b2c\u51e0\u7ec4\u6570\u636e\u4f7f\u7528\uff09\u3002\u6bcf\u6b21\u64cd\u4f5c\u65f6\u5224\u65ad\u8fd9\u4e2a \u4f4d\u7f6e tag \u4e2d\u7684\u65f6\u95f4\u548c\u5f53\u524d\u65f6\u95f4\u662f\u5426\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e2a\u4f4d\u7f6e\u5e94\u8be5\u662f 0 \u8fd8\u662f\u6570\u7ec4\u5185\u7684\u503c\u3002 //\u65f6\u95f4\u6233\u4f18\u5316 int tag[MAXN], t[MAXN], Tag; void reset() { ++Tag; } void add(int k, int v) { while (k <= n) { if (tag[k] != Tag) t[k] = 0; t[k] += v, tag[k] = Tag; k += lowbit(k); } } int getsum(int k) { int ret = 0; while (k) { if (tag[k] == Tag) ret += t[k]; k -= lowbit(k); } return ret; }","title":"\u65f6\u95f4\u6233\u4f18\u5316"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#tricks","text":"","title":"Tricks"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#on","text":"\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u503c\u662f\u7531\u6240\u6709\u4e0e\u81ea\u5df1\u76f4\u63a5\u76f8\u8fde\u7684\u513f\u5b50\u7684\u503c\u6c42\u548c\u5f97\u5230\u7684\u3002\u56e0\u6b64\u53ef\u4ee5\u5012\u7740\u8003\u8651\u8d21\u732e\uff0c\u5373\u6bcf\u6b21\u786e\u5b9a \u5b8c\u513f\u5b50\u7684\u503c\u540e\uff0c\u7528\u81ea\u5df1\u7684\u503c\u66f4\u65b0\u81ea\u5df1\u7684\u76f4\u63a5\u7236\u4eb2\u3002 // O(n)\u5efa\u6811 void init() { for (int i = 1; i <= n; ++i) { t[i] += a[i]; int j = i + lowbit(i); if (j <= n) t[j] += t[i]; } }","title":"$O(n)$\u5efa\u6811"}]}